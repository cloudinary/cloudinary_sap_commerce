<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/security/oauth2 
     	http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

		<!-- Commons security imports -->
		<import resource="classpath:webservicescommons/commons-security-spring.xml"/>
 
 		<!-- Security configuration for swagger resources -->
		<security:http pattern="/#{configurationService.configuration.getProperty('springfox.documentation.swagger.v2.path')}" security="none"/>
		<security:http pattern="/swagger-resources/**" security="none"/>
		<security:http pattern="/swagger-ui.html" security="none"/>
		<security:http pattern="/webjars/*swagger*/**" security="none"/>
	
		<!-- Security configuration for resources -->
		<http pattern="/**" entry-point-ref="oauthAuthenticationEntryPoint" use-expressions="true" xmlns="http://www.springframework.org/schema/security">
		
			<session-management session-authentication-strategy-ref="fixation" />

			<!-- for PRODUCTION make sure that webservicescommons.required.channel=https -->
			<intercept-url pattern="/sample/users/{id}" access="hasRole('ROLE_CLIENT')" requires-channel="#{configurationService.configuration.getString('webservicescommons.required.channel', 'https')}" />
			<intercept-url pattern="/**" access="isAuthenticated()" requires-channel="#{configurationService.configuration.getString('webservicescommons.required.channel', 'https')}" />

			<port-mappings>
				<port-mapping http="#{configurationService.configuration.getProperty('tomcat.http.port')}" https="#{configurationService.configuration.getProperty('tomcat.ssl.port')}" />
				<port-mapping http="#{configurationService.configuration.getProperty('embeddedserver.http.port')}" https="#{configurationService.configuration.getProperty('embeddedserver.ssl.port')}" />
			</port-mappings>

			<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
			<custom-filter ref="hybrisUserFilter" after="LAST" />
			<access-denied-handler ref="oauthAccessDeniedHandler" />
			
			<headers>
				<content-type-options />
				<hsts include-subdomains="true" max-age-seconds="16070400" />
				<xss-protection />
				<frame-options disabled="true"/>
			</headers>
			<csrf disabled="true"/>
		</http>

		
	</beans>
