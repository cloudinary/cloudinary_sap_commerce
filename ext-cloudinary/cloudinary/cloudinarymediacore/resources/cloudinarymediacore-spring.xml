<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="cloudinarymediacoreSystemSetup" class="uk.ptr.cloudinary.setup.CloudinarymediacoreSystemSetup"
          parent="abstractCoreSystemSetup">
        <!-- constructor arg injection example -->
        <constructor-arg ref="cloudinarymediacoreService"/>
    </bean>

    <bean id="cloudinarymediacoreService" class="uk.ptr.cloudinary.service.impl.DefaultCloudinarymediacoreService">
        <!-- setter injection example -->
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <bean id="adminApiService" class="uk.ptr.cloudinary.service.impl.DefaultAdminApiService"/>

    <bean id="uploadApiService" class="uk.ptr.cloudinary.service.impl.DefaultUploadApiService"/>

    <bean id="transformationApiService" class="uk.ptr.cloudinary.service.impl.DefaultTransformationApiService"/>

    <bean id="cloudinaryConfigDao" class="uk.ptr.cloudinary.dao.impl.DefaultCloudinaryConfigDao"/>

    <bean id="conversionMediaFormatInitDefaultsInterceptor"
            class="uk.ptr.cloudinary.interceptors.ConversionMediaFormatInitDefaultInterceptor" />

    <bean id="conversionMediaFormatInitDefaultsInterceptorMapping"
            class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="conversionMediaFormatInitDefaultsInterceptor"/>
        <property name="typeCode" value="MediaFormat"/>
    </bean>


    <alias name="defaultCloudinaryConvertedMediaCreationStrategy" alias="cloudinaryConvertedMediaCreationStrategy"/>
    <bean id="defaultCloudinaryConvertedMediaCreationStrategy"
            class="uk.ptr.cloudinary.strategies.impl.DefaultCloudinaryConvertedMediaCreationStrategy">
    </bean>

    <bean id="cloudinaryMediaConversionStrategy"
            class="uk.ptr.cloudinary.strategies.impl.DefaultCloudinaryMediaConversionStrategy">
    </bean>

</beans>
